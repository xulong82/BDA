g2t = g2t[order(sapply(g2t, length), decreasing = T)]
g2t[1:10]
t2g = lapply(omim.t, function(t) { omim$Gene[omim$MSH == t] })
names(t2g) = omim.t
t2g = t2g[order(sapply(t2g, length), decreasing = T)]
t2g[1:10]
gwas.g = unique(gwas$Gene)
gwas.t = unique(gwas$MSH)
g2t = lapply(gwas.g, function(g) { gwas$MSH[gwas$Gene == g] })
g2t = lapply(gwas.g, function(g) { gwas$MSH[gwas$Gene == g] })
names(g2t) = gwas.g
g2t = g2t[order(sapply(g2t, length), decreasing = T)]
g2t[1:10]
t2g = lapply(gwas.t, function(t) { gwas$Gene[gwas$MSH == t] })
t2g = lapply(gwas.t, function(t) { gwas$Gene[gwas$MSH == t] })
names(t2g) = gwas.t
t2g = t2g[order(sapply(t2g, length), decreasing = T)]
t2g = t2g[order(sapply(t2g, length), decreasing = T)]
t2g[1:10]
table(ds13$Phase.Latest)
table(ds13$lApprovedUS.EU)
apr = ds13[ds13$Phase.Latest %in% c("Launched", "Registered", "Withdrawn") | ds13$lApprovedUS.EU == TRUE, ]
aprGene = unique(apr$Gene)
length(aprGene)
aprMsh = unique(apr$MSH)
length(aprMsh)
(res1 = table(aprGene %in% omim.g))
res1["TRUE"] / sum(res1)
(res2 = table(aprGene %in% gwas.g))
res2["TRUE"] / sum(res2)
(res3 = table(aprGene %in% c(omim.g, gwas.g)))
res3["TRUE"] / sum(res3)
0.01 * 1000
t = 1:1000
y = exp(-t)
plot(t, y)
y = exp(-0.1 * t)
plot(t, y)
t = 1:1000 / 100
t
y = exp(-* t)
y = exp(-t)
plot(t, y)
175000 * 115
175000 * 1.15
175000 * 1.2
35.09 + 16.83 + 18.09 + 41.18
seq(0:1)
1:1e3/1e3
1:1e3/1e2
k = 1
t = 1:1e3 / 1e2
y = k * exp(-k * t)
plot(t, y)
plot(t, y)
k = 2
t = 1:1e3 / 1e2
y = k * exp(-k * t)
plot(t, y)
1/18
16 * 8
16 * 40
16 * 40 * 50
x = seq(-10, 10, 1e3)
x = seq(-10, 10, 1e-3)
tanh = tanh(x)
plot(x, y)
plot(x, tanh)
x = seq(-5, 5, 1e-3)
tanh = tanh(x)
plot(x, tanh)
plot(x, tanh + 1)
plot(x, (tanh + 1) / 2)
mycrm = function (x, alpha) {
(tanh(x) + 1)^alpah
}
y = mycrm(x, 1)
y = mycrm(x, alpha = 1)
mycrm = function (x, alpha) {
(tanh(x) + 1)^alpha
}
y = mycrm(x, alpha = 1)
plot(x, y)
mycrm = function (x, alpha) ((tanh(x) + 1) / 2)^alpha
y = mycrm(x, alpha = 1)
plot(x, y)
y1 = mycrm(x, alpha = 1)
y2 = mycrm(x, alpha = 2)
plot(x, y1)
line(x, y2)
lines(x, y2, color = "red")
plot(x, y1)
plot(x, y1)
lines(x, y2, col = "red")
plot(x, y1, type = "l")
lines(x, y2, col = "red")
y5 = mycrm(x, alpha = 5)
lines(x, y5, col = "blue")
plot(x, x^2)
plot(x, x^3)
plot(x, x^exp(1))
plot(x, x^exp(1))
exp(1)
x^exp(1)
(-1)^exp(1)
(-1)^(exp(1))
(-1)^2
(-1)^2.1
16 * 40
16 * 40 * 50
?gpairs
?gpairs
??gpairs
0.95^10
926/74
install.packages("rstan")
library(rstan)
library(dplyr)
setwd("~/Git/stats/bayes/")
mymodel <- rstan::stan_model(file = "./lm.stan", model_name="linear_regression")
sigma = 1; N = 10
pval = sapply(1:1e3, function(i) {
y <- theta + rnorm(N, 0, sigma)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
list(y = y, p = p)
})
theta = 0; sigma = 1; N = 10
pval = sapply(1:1e3, function(i) {
y <- theta + rnorm(N, 0, sigma)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
list(y = y, p = p)
})
table(pval$p < 0.05)
names(pval)
pval
pval = lapply(1:1e3, function(i) {
y <- theta + rnorm(N, 0, sigma)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
list(y = y, p = p)
})
table(pval$p < 0.05)
pval = lapply(1:1e3, function(i) {
y <- theta + rnorm(N, 0, sigma)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
data.frame(y = y, p = p)
})
pval[[1]]
pval = lapply(1:1e3, function(i) {
y <- theta + rnorm(N, 0, sigma)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
list(y = y, p = p)
})
pval[[1]]
out = lapply(1:1e3, function(i) {
y <- theta + rnorm(N, 0, sigma)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
list(y = y, p = p)
})
pval = sapply(out, out$p)
pval = sapply(out, funtion(x) x$p)
pval = lapply(out, funtion(x) x$p)
pval = lapply(out, function(x) x$p)
pval
pval = lapply(out, function(x) x$p) %>% unlist
table(pval < 0.05)
out[[1]]
which(pval < 0.05)
data <- list(n = N, y = out[[21]]$y)
data
(fit <- sampling(mymodel, data, warmup = 3e2, iter = 2e3, chains = 3))
mymodel
data <- list(N = N, y = out[[21]]$y)
(fit <- sampling(mymodel, data, warmup = 3e2, iter = 2e3, chains = 3))
fit
lm(data$y ~ 1) %>% summary
plot(fit)
(fit <- optimizing(mymodel, data)
)
fit
str(fit)
(fit <- sampling(mymodel, data, warmup = 3e2, iter = 2e3, chains = 3))
?pnorm
pnorm(0, 0.92, sd = 0.35)
pnorm(0, mean = 0.92, sd = 0.35)
lm(data$y ~ 1) %>% summary
pnorm(0, mean = 0.92, sd = 0.35)
pnorm(0, mean = 0, sd = 0.35)
pnorm(0, mean = 1, sd = 0.35)
pnorm(0, mean = -1, sd = 0.35)
str(fit)
names(fit)
fit$alpha
fit
summary(fit)
summary(fit)$stats
summary(fit)$summary
summary(fit)$summary
which(pval < 0.05)
data <- list(N = N, y = out[[79]]$y)
lm(data$y ~ 1) %>% summary
mymodel <- rstan::stan_model(file = "./lm.stan", model_name="linear_regression")
(fit <- sampling(mymodel, data, warmup = 3e2, iter = 2e3, chains = 3))
plot(fit)
summary(fit)$summary
(fit <- sampling(mymodel, data, warmup = 3e2, iter = 2e3, chains = 3))
plot(fit)
summary(fit)$summary
theta = 0; sigma = 1; N = 20
out = lapply(1:1e3, function(i) {
y <- theta + rnorm(N, 0, sigma)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
list(y = y, p = p)
})
pval = lapply(out, function(x) x$p) %>% unlist
table(pval < 0.05)
# what happens in the bayesian statistics?
which(pval < 0.05)
data <- list(N = N, y = out[[79]]$y)
lm(data$y ~ 1) %>% summary
data
# what happens in the bayesian statistics?
which(pval < 0.05)
data <- list(N = N, y = out[[6]]$y)
lm(data$y ~ 1) %>% summary
(fit <- sampling(mymodel, data, warmup = 3e2, iter = 2e3, chains = 3))
lm(data$y ~ 1) %>% summary
(fit <- sampling(mymodel, data, warmup = 3e2, iter = 2e3, chains = 3))
plot(fit)
# normal prior
mymodel2 <- rstan::stan_model(file = "./lm2.stan", model_name="linear_regression")
(fit2 <- sampling(mymodel2, data, warmup = 3e2, iter = 2e3, chains = 3))
plot(fit2)
# normal prior
mymodel2 <- rstan::stan_model(file = "./lm2.stan", model_name="linear_regression")
(fit2 <- sampling(mymodel2, data, warmup = 3e2, iter = 2e3, chains = 3))
plot(fit2)
fit1
fit
fit2
tau = 1; sigma = 1; N = 20
theta <- rnorm(N, 0, tau)
y <- theta + rnorm(N, 0, sigma)
y
hist(y)
theta
sim1 = lapply(1:1e3, function(i) {
theta <- rnorm(N, 0, tau)
y <- theta + rnorm(N, 0, sigma)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
list(y = y, p = p)
})
pval = lapply(sim1, function(x) x$p) %>% unlist
table(pval < 0.05)
sim1 = lapply(1:1e3, function(i) {
theta <- rnorm(N, 0, tau)
y <- theta + rnorm(N, 0, sigma)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
list(y = y, p = p)
})
pval = lapply(sim1, function(x) x$p) %>% unlist
table(pval < 0.05)
tau = 2; sigma = 1; N = 20
sim1 = lapply(1:1e3, function(i) {
theta <- rnorm(N, 0, tau)
y <- theta + rnorm(N, 0, sigma)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
list(y = y, p = p)
})
pval = lapply(sim1, function(x) x$p) %>% unlist
table(pval < 0.05)
tau = 1; sigma = 1; N = 20
sim1 = lapply(1:1e3, function(i) {
theta <- rnorm(N, 0, tau)
y <- theta + rnorm(N, 0, sigma)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
list(y = y, p = p)
})
pval = lapply(sim1, function(x) x$p) %>% unlist
table(pval < 0.05)
# what happens in the bayesian statistics?
which(pval < 0.05)
data <- list(N = N, y = sim1[[11]]$y)
lm(data$y ~ 1) %>% summary
data <- list(N = N, y = sim1[[21]]$y)
lm(data$y ~ 1) %>% summary
# normal prior
mymodel2 <- rstan::stan_model(file = "./lm2.stan", model_name="linear_regression")
(fit2 <- sampling(mymodel2, data, warmup = 3e2, iter = 2e3, chains = 3))
lm(data$y ~ 1) %>% summary
mymodel2
sd(y)
theta <- rnorm(N, 0, tau)
y <- theta + rnorm(N, 0, sigma)
mean(y)
sd(y)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
f
y <- rnorm(N, theta, sigma)
f <- lm(y ~ 1) %>% summary
f
sd(y)
y
theta
sim1 = lapply(1:1e3, function(i) {
theta <- rnorm(N, 0, tau)
y <- rnorm(N, theta, sigma)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
list(y = y, p = p)
})
pval = lapply(sim1, function(x) x$p) %>% unlist
table(pval < 0.05)
sort(pval)
# what happens in the bayesian statistics?
which(pval < 0.05)
pval[20]
data <- list(N = N, y = sim1[[20]]$y)
data
data$y
mean(data$y)
sd(data$y)
sd(y)
lm(data$y ~ 1) %>% summary
# normal prior
mod2 <- rstan::stan_model(file = "./lm2.stan", model_name="linear_regression")
(fit2 <- sampling(mod2, data, warmup = 3e2, iter = 2e3, chains = 3))
lm(data$y ~ 1) %>% summary
tau = 1; sigma = 2; N = 20
sim1 = lapply(1:1e3, function(i) {
theta <- rnorm(N, 0, tau)
y <- rnorm(N, theta, sigma)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
list(y = y, p = p)
})
pval = lapply(sim1, function(x) x$p) %>% unlist
table(pval < 0.05)
sim1 = lapply(1:1e3, function(i) {
theta <- rnorm(N, 0, tau)
y <- rnorm(N, theta, sigma)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
list(y = y, p = p)
})
pval = lapply(sim1, function(x) x$p) %>% unlist
table(pval < 0.05)
# what happens in the bayesian statistics?
which(pval < 0.05)
pval[6]
data <- list(N = N, y = sim1[[6]]$y)
data
lm(data$y ~ 1) %>% summary
# normal prior
mod2 <- rstan::stan_model(file = "./lm2.stan", model_name="linear_regression")
(fit2 <- sampling(mod2, data, warmup = 3e2, iter = 2e3, chains = 3))
summary(fit)$summary
lm(data$y ~ 1) %>% summary
summary(fit2)$summary
tau = 1; sigma = 1; N = 10
sim1 = lapply(1:1e3, function(i) {
theta <- rnorm(N, 0, tau)
y <- rnorm(N, theta, sigma)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
list(y = y, p = p)
})
pval = lapply(sim1, function(x) x$p) %>% unlist
table(pval < 0.05)
# what happens in the bayesian statistics?
which(pval < 0.05)
data <- list(N = N, y = sim1[[109]]$y)
lm(data$y ~ 1) %>% summary
# normal prior
mod2 <- rstan::stan_model(file = "./lm2.stan", model_name="model 2")
(fit2 <- sampling(mod2, data, warmup = 3e2, iter = 2e3, chains = 3))
lm(data$y ~ 1) %>% summary
(fit2 <- sampling(mod2, data, warmup = 3e2, iter = 2e3, chains = 3))
(fit2 <- sampling(mod2, data, warmup = 3e2, iter = 2e3, chains = 3))
summary(fit2)$summary
lm(data$y ~ 1) %>% summary
tau = 1; sigma = 1; N = 5
sim1 = lapply(1:1e3, function(i) {
theta <- rnorm(N, 0, tau)
y <- rnorm(N, theta, sigma)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
list(y = y, p = p)
})
pval = lapply(sim1, function(x) x$p) %>% unlist
table(pval < 0.05)
# what happens in the bayesian statistics?
which(pval < 0.05)
data <- list(N = N, y = sim1[[4]]$y)
lm(data$y ~ 1) %>% summary
(fit2 <- sampling(mod2, data, warmup = 3e2, iter = 2e3, chains = 3))
plot(fit2)
summary(fit2)$summary
lm(data$y ~ 1) %>% summary
# what happens in the bayesian statistics?
which(pval < 0.05)
data <- list(N = N, y = sim1[[16]]$y)
lm(data$y ~ 1) %>% summary
table(pval < 0.05)
(fit2 <- sampling(mod2, data, warmup = 3e2, iter = 2e3, chains = 3))
summary(fit2)$summary
lm(data$y ~ 1) %>% summary
summary(lm(data$y ~ 1))$coefficient
summary(fit2)$summary
# what happens in the bayesian statistics?
which(pval < 0.05)
data <- list(N = N, y = sim1[[51]]$y)
lm(data$y ~ 1) %>% summary
(fit2 <- sampling(mod2, data, warmup = 3e2, iter = 2e3, chains = 3))
summary(fit2)$summary
summary(lm(data$y ~ 1))$coefficient
tau = 1; sigma = 1; N = 3
sim1 = lapply(1:1e3, function(i) {
theta <- rnorm(N, 0, tau)
y <- rnorm(N, theta, sigma)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
list(y = y, p = p)
})
pval = lapply(sim1, function(x) x$p) %>% unlist
table(pval < 0.05)
# what happens in the bayesian statistics?
which(pval < 0.05)
sim1 = lapply(1:1e3, function(i) {
theta <- rnorm(N, 0, tau)
y <- rnorm(N, theta, sigma)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
list(y = y, p = p)
})
pval = lapply(sim1, function(x) x$p) %>% unlist
table(pval < 0.05)
# what happens in the bayesian statistics?
which(pval < 0.05)
data <- list(N = N, y = sim1[[4]]$y)
lm(data$y ~ 1) %>% summary
(fit2 <- sampling(mod2, data, warmup = 3e2, iter = 2e3, chains = 3))
(fit2 <- sampling(mod2, data, warmup = 3e2, iter = 2e3, chains = 3))
(fit2 <- sampling(mod2, data, warmup = 3e2, iter = 2e3, chains = 3))
(fit2 <- sampling(mod2, data, warmup = 3e2, iter = 2e3, chains = 3))
summary(fit2)$summary
summary(lm(data$y ~ 1))$coefficient
plot(fit2)
(fit2 <- sampling(mod2, data, warmup = 3e2, iter = 2e3, chains = 3))
plot(fit2)
summary(fit2)$summary
summary(lm(data$y ~ 1))$coefficient
tau = 1; sigma = 1; N = 5
sim1 = lapply(1:1e3, function(i) {
theta <- rnorm(N, 0, tau)
y <- rnorm(N, theta, sigma)
f <- lm(y ~ 1) %>% summary
p <- f$coefficients[, "Pr(>|t|)"]
list(y = y, p = p)
})
pval = lapply(sim1, function(x) x$p) %>% unlist
table(pval < 0.05)
# what happens in the bayesian statistics?
which(pval < 0.05)
data <- list(N = N, y = sim1[[19]]$y)
lm(data$y ~ 1) %>% summary
1/sqrt(5)
(fit2 <- sampling(mod2, data, warmup = 3e2, iter = 2e3, chains = 3))
plot(fit2)
summary(fit2)$summary
summary(lm(data$y ~ 1))$coefficient
1/sqrt(5)
1/sqrt(4)
theta <- rnorm(N, 0, tau)
y <- rnorm(N, theta, sigma)
sd(y)
sd(y)
N = 1e3
theta <- rnorm(N, 0, tau)
y <- rnorm(N, theta, sigma)
f <- lm(y ~ 1) %>% summary
f
1/sqrt(1e3)
N = 5
x = rnorm(1e6, 0, 1)
y = lapply(1:1e3, function(x) sample(x, size = 1e2))
y = lapply(1:1e3, function(x) sample(x, size = 1e2, replace = T))
sapply(y, mean) %>% sd
x = rnorm(1e6, 0, 1)
y = lapply(1:1e3, function(x) sample(x, size = 1e2, replace = T))
sapply(y, mean) %>% sd
y[[1]]
y[[2]]
y[[3]]
hist(x)
y = lapply(1:1e3, function(i) sample(x, size = 1e2, replace = T))
sapply(y, mean) %>% sd
sd(x)
y = lapply(1:1e3, function(i) sample(x, size = 1e2, replace = T))
y = sapply(y, mean)
sd(y)
